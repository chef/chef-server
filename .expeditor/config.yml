product_key: chef-server

# Slack channel in Chef Software slack to send notifications about build failures, etc
slack:
  notify_channel: chef-server-notify

automate:
  organization: products
  project: chef-server

github:
  # The file where the MAJOR.MINOR.PATCH version is kept. The version in this file
  # is bumped automatically via the `built_in:bump_version` merge_action.
  version_file: "VERSION"
  # The file where our CHANGELOG is kept. This file is updated automatically with
  # details from the Pull Request via the `built_in:update_changelog` merge_action.
  changelog_file: "CHANGELOG.md"
  # The Github Team primarily responsible for handling incoming Pull Requests.
  maintainer_group: chef/chef-server-maintainers

# These actions are taken, in order they are specified, anytime a Pull Request is merged.
merge_actions:
  - built_in:bump_version:
      ignore_labels:
        - "Version: Skip Bump"
        - "Expeditor: Skip All"
        - "Expeditor: ACC Only"
  - built_in:update_changelog:
      ignore_labels:
        - "Changelog: Skip Update"
        - "Expeditor: Skip All"
        - "Expeditor: ACC Only"
  - built_in:trigger_omnibus_build:
      ignore_labels:
        - "Omnibus: Skip Build"
        - "Expeditor: Skip All"
        - "Expeditor: ACC Only"
      only_if: built_in:bump_version
  - built_in:update_acc:
      only_if_labels:
        - "Expeditor: ACC Only"

# These actions are taken, in the order specified, when an Omnibus artifact is promoted
# within Chef's internal artifact storage system.
#
# TODO: add promoted_to_unstable action to update changelog with modified omnibus components
artifact_actions:
  promoted_to_unstable:
    - built_in:update_acc
  promoted_to_current:
  promoted_to_stable:
    - built_in:rollover_changelog

###############################################################################
# Notes on the tags inside CHANGELOG.md
###############################################################################
# latest_release
#   The content inside this block contains the most recent Pull Request to be
#   merged into the repository. When the `built_in:update_changelog` merge_action
#   is triggered, the content of this block is updated to reflect the most recent
#   Pull Request merged.
#
# release_rollup
#   This block contains all the Pull Requests merged since the most recent
#   Stable release. When the `built_in:update_changelog` merge_action is triggered,
#   the content inside this block is updated to include the most recent Pull Request
#   merged. When the `built_in:rollover_changelog` artifact_action is trggered,
#   the line items (each `-` line) are evaluated based on the version in the tags
#   at the end of the line (e.g.  `<!-- 13.0.0 -->`). If the version is more recent
#   than the version that was just promoted (e.g. `> STABLE`), it is left in the
#   release_rollup section. Otherwise, it is moved into the `latest_stable_release`
#   section.
#
# latest_stable_release
#   This block contains a list of all the changes that were released in the latest
#   stable version. When the `built_in:rollover_changelog` artifact_action is triggerd,
#   the content inside this block is moved underneath it and the block is updated with
#   all of the line item chanages from the `release_rollup` block that were included in
#   the just released stable build (e.g. `> STABLE-1, <= STABLE`)
#
