# The maximum accepted body size for a client request, as indicated by the
# Content-Length request header. When the maximum accepted body size is greater
# than this value, a 413 Request Entity Too Large error is returned.
client_max_body_size = "250m"

# The fully qualified domain name for the server. This should be set to the
# address at which people will be accessing the server.
server_name = "chef-server"

# # SSL protocols and ciphers

# These options provide the current best security with TSLv1
# ssl_protocols = "-ALL +TLSv1"
# ssl_ciphers = "RC4:!MD5"

# This might be necessary for auditors that want no MEDIUM security ciphers and
# don't understand BEAST attacks
# ssl_protocols = "-ALL +SSLv3 +TLSv1"
# ssl_ciphers = "HIGH:!MEDIUM:!LOW:!ADH:!kEDH:!aNULL:!eNULL:!EXP:!SSLv2:!SEED:!CAMELLIA:!PSK"

# Based off of the Mozilla recommended cipher suite
# https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.8.1&openssl=1.0.1u&hsts=no&profile=modern
# NOTE: testssl.sh warns about Secure Renegotiation (CVE-2009-3555),
#       but this might be ok since it should only allow for renegotiating from one
#       of the allowed ciphers to another one.
# NOTE: AES256-GCM-SHA384 is not part of the Mozilla suite but has been added to
#       support AWS's classic ELB's. Without it the health checks will fail.
ssl_protocols = "TLSv1.2"
ssl_ciphers = "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT"

# Ports used for SSL traffic; used to render partials for chef_http[s]_lb_conf
[http]
port = 8080
is_ssl = false
[https]
port = 8443
is_ssl = true
