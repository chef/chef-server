require 'chef-utils/dist'

# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
if ENV['CHEF_SECRETS_FD'].nil?
  ENV['CHEF_SECRETS_DATA'] ||= File.read(File.expand_path("../config/private-#{ChefUtils::Dist::Infra::SHORT}-secrets.json", __FILE__))
else
  # If CHEF_SECRETS_FD is set, ensure we have a fallback in case the FD becomes invalid
  # This can happen when rake is executed in a subprocess where the FD is not properly inherited
  secrets_file = File.expand_path("../config/private-#{ChefUtils::Dist::Infra::SHORT}-secrets.json", __FILE__)
  if File.exist?(secrets_file)
    ENV['CHEF_SECRETS_DATA'] ||= File.read(secrets_file)
  end
end

require_relative 'config/application'

# Ensure bundler is set up and gems are available
require_relative 'config/boot'

# Load the Secrets class before the application to ensure it's available for database.yml parsing
require 'veil'
require_relative 'config/initializers/00_secrets'

OcId::Application.load_tasks

task :default => :spec
