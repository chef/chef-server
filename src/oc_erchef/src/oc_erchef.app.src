%% -*- mode: erlang -*-
%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
{application, oc_erchef,
 [
  {description, ""},
  {vsn, {cmd,"cat VERSION | awk '{print $0}'"}},
  {registered, []},
  %% TODO 2017-02-24: investigate this further
  %%
  %% Each of these applications lists pooler as a dependency -
  %% and if they start automatically, then pooler will be started
  %% before anything in the applications list below - including chef_secrets,
  %% which many of these don't have as a dependency. In the case
  %% of sqerl, the pooler procs will automatically attempt to access
  %% the secrets they need to connect to the pg server - so we have to
  %% ensure that pooler is started after chef_secrets.
  %%
  %% By using included_applications, we'll prevent them from starting
  %% automatically - but that means in oc_erchef_app, we will need
  %% to start them by hand after we know chef_secrets is running.
  %%
  %% Idea: instead of having to monitor which list an application belongs in,
  %% we could instead make all (or most) applications included,
  %% and just manage startup ourselves.
  {included_applications, [
                           pooler,
                           chef_db,
                           chef_objects,
                           sqerl,
                           opscoderl_httpc,
                           oc_chef_authz,
                           oc_chef_wm,
                           data_collector
                          ]},
  {applications, [lager,
                  chef_secrets,
                  chef_index,
                  depsolver,
                  bear,
                  chef_authn,
                  ej,
                  envy,
                  erlware_commons,
                  et,
                  folsom_graphite,
                  gs,
                  jiffy,
                  mini_s3,
                  observer,
                  opscoderl_folsom,
                  quickrand,
                  runtime_tools,
                  tools,
                  uuid,
                  webtool]},
  {mod, { oc_erchef_app, []}},
  {env, []}
 ]}.
