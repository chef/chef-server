%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% -*- mode: erlang -*-
%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
[
 {kernel, [{start_pg2, true}]},
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]},
 %% Lager Config
 {lager, [
            %% https://github.com/basho/lager/blob/master/README.org
          {handlers, [
                      {lager_console_backend,
                       [error,
                        {lager_default_formatter,
                         [time, " [", severity, "] ",
                          {error_type, [error_type, " "], ""},
                          {org_name, [org_name, " (", org_id, "): "], ""}, message, "\n"]}]},

                      {lager_file_backend, [
                                            [{"log/error.log", error, 10485760, "$D0", 5},
                                             {lager_default_formatter,
                                              [date, " ", time, " [", severity, "] ",
                                               {org_name, [org_name, " (", org_id, "): "], "no_org (no_id):"},
                                               {error_type, [error_type, " "], ""},
                                               message, "\n"]}],

                                            [{"log/console.log", info, 10485760, "$D0", 5},
                                             {lager_default_formatter,
                                              [date, " ", time, " [", severity, "] ",
                                               {org_name, [org_name, " (", org_id, "): "], "no_org (no_id):"},
                                               {error_type, [error_type, " "], ""},
                                               message, "\n"]}]
                                           ]}
                     ]},
          {crash_log, "log/crash.log"},
          {crash_log_msg_size, 65536},
          {crash_log_size, 10485760},
          {crash_log_date, "$D0"},
          {crash_log_count, 5},
          {error_logger_redirect, true},
          {error_logger_hwm, 1000 }
         ]},
  {oc_chef_authz, [
                {authz_service, [{root_url, "http://localhost/dontcare"},
                                 {timeout, 0},
                                 {init_count, 25},
                                 {max_count, 50},
                                 {cull_interval, {1,min}},
                                 {max_age, {70, sec}},
                                 {max_connection_duration, {70,sec}},
                                 {ibrowse_options, [{connect_timeout, 5000}]}]},

                {authz_superuser_id, <<"12345">>},
                {authz_root_url, "http://localhost/dontcare" }
               ]},
  {chef_db, [
             {bulk_fetch_batch_size, 5},
             {cache_defaults, [{max_size, 10000 },
                               {ttl, 3600 }]},
             {couchdb_host, {{couchdb_server}} },
             {couchdb_port, {{couchdb_port}} }
            ]},

  {chef_index, [
                {rabbitmq_host, "{{rabbitmq_host}}" },
                {rabbitmq_port, {{rabbitmq_port}} },
                {rabbitmq_user, <<"{{rabbitmq_user}}">>},
                {rabbitmq_password, <<"{{rabbitmq_password}}">>},
                {rabbitmq_vhost, <<"{{rabbitmq_vhost}}">>},
                {rabbitmq_exchange, <<"">>},
                {solr_url, "{{solr_url}}" }
               ]},

  {chef_objects, [
                  {certificate_root_url, "http://localhost/dontcare/certificates"},
                  {s3_access_key_id, "bleh"},
                  {s3_secret_key_id, "blag"},
                  {s3_url, "http://localhost/dontcare"},
                  {s3_platform_bucket_name, "bucket"},
                  {s3_url_ttl, 28800},
                  {s3_parallel_ops_timeout, 5000},
                  {s3_parallel_ops_fanout, 20}
                 ]},

 {sqerl, [
          %% Database connection parameters
          {db_host, "{{db_host}}"},
          {db_port, {{db_port}} },
          {db_user, "{{db_user}}"},
          {db_pass, "{{db_pass}}"},
          {db_name,   "{{db_name}}"},
          {db_timeout, {{db_timeout}} },
          {idle_check, 10000},
          {prepared_statements, {oc_chef_sql, statements, [pgsql]}},
          {column_transforms,
           [{<<"created_at">>,
             {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}},
            {<<"updated_at">>,
             {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}}]}
         ]},

 {pooler, [
           {pools, [[{name, sqerl},
                     {max_count, {{db_pool_size}} },
                     {init_count, {{db_pool_size}} },
                     {start_mfa, {sqerl_client, start_link, []}}]]},
           {metrics_module, folsom_metrics}
          ]},

 {ibrowse, [
            {default_max_sessions, {{ibrowse_max_sessions}} },
            {default_max_pipeline_size, {{ibrowse_max_pipeline_size}} }
           ]},

 {moser, [
           {moser_dets_dir, "/tmp/moser"},
           {couch_path, "/tmp/couch"},
           {purge_chunksize, 10},
           {purge_throttle, 0},
           {purge_backup, false},
           {purge_auth, false},
           {purge_backup_dir, ""}
           ]},

 {folsom_graphite,[ {application, "moser"}]},

 {stats_hero, [
               %% Set sender pool size to DB max_connections to avoid contention
               {udp_socket_pool_size, {{udp_socket_pool_size}} },
               {estatsd_host, "{{estatsd_host}}"},
               {estatsd_port, {{estatsd_port}} }
               ]},
 {mover, [
          {eredis_host, "{{redis_host}}"},
          {eredis_port, {{redis_port}} },
          {dry_run, {{dry_run}} },
          {sleep_time, 0},
          {solr_url, "{{solr_url}}" }
         ]},
 {chef_reindex, [
          {solr_service, [{root_url, "{{solr_url}}" },
                          {timeout, {{solr_timeout}} },
                          {init_count, {{solr_http_init_count}} },
                          {max_count, {{solr_http_max_count}} },
                          {cull_interval, {{solr_http_cull_interval}} },
                          {max_age, {{solr_http_max_age}} },
                          {max_connection_duration, {{solr_http_max_connection_duration}} },
                          {ibrowse_options, {{solr_ibrowse_options}} }]
          }
         ]}
].
