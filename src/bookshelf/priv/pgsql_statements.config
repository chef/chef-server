%% -*- mode:erlang, erlang-indent-level: 4;indent-tabs-mode: nil -*-
{ping, <<"SELECT 'pong' AS ping LIMIT 1">>}.

%% Create bucket
%% bucket_name returns bucket_id
{insert_bucket, <<"INSERT INTO bucket_names (bucket_name) VALUES ($1)">>}.

{delete_bucket, <<"DELETE FROM bucket_names WHERE bucket_name = $1">>}.

{find_bucket, <<"SELECT bucket_name, bucket_id FROM bucket_names WHERE bucket_name = $1">>}.

{list_bucket,
 <<"SELECT bucket_name, f.bucket_id, f.name as file_name, created_at, data_id "
   "FROM file_names f INNER JOIN bucket_names b ON f.bucket_id = b.bucket_id WHERE bucket_name = $1">>}.

{list_bucket_with_hash,
 <<"SELECT * FROM expanded_files WHERE bucket_name = $1 ">>}.

{list_buckets, <<"SELECT bucket_name, bucket_id FROM bucket_names ORDER BY bucket_name">>}.

%% Create file (returns data_id) (deprecated?)
{insert_file,
 <<"SELECT create_file_by_bucket_name($1, $2) as data_id">>}. %% bucket, name returns id

{insert_file_with_data_id,
 <<"INSERT into file_names (bucket_id, name, data_id) VALUES ($1, $2, $3) RETURNING file_id">>}.


{update_file_with_data_id,
 <<"UPDATE file_names SET data_id = $2 WHERE file_id = $1">>}.

%% Get file information by name and bucket
{find_file,
 <<"SELECT * FROM expanded_files WHERE (bucket_name = $1 AND name = $2)">>}.

{find_file_by_id,
 <<"SELECT * FROM expanded_files WHERE file_id = $1">>}.

{delete_file,
 <<"DELETE FROM file_names WHERE file_id = $1">>}.

%% file_data

%% Insert a new data segment
{insert_file_data,
 <<"INSERT INTO file_data (complete) VALUES ('false') RETURNING data_id">>}.

{delete_file_data,
 <<"DELETE FROM file_data WHERE data_id = $1">>}.

%% Mark a data element done
{update_file_data_done,
 <<"UPDATE file_data SET complete = 'true', data_size = $2, chunk_count = $3, hash_md5 = $4, hash_sha256 = $5, hash_sha512 = $6 WHERE data_id = $1">>}.


%% Destructively rename a file; takes bucket_id, file_id and new name
{rename_file_with_overwrite,
 <<"SELECT rename_file_with_overwrite($1, $2, $3) as success">>}.

%%
%% file_chunks
%%
%% Get chunk by id
%% sqerl:statement(fetch_file_chunk_data, [1,0], first_as_scalar, [data]).
%% ** exception error: no case clause matching {ok,<<"This is a file">>}
%%     in function  sqerl:statement/4 (/host/src/bookshelf/_build/default/lib/sqerl/src/sqerl.erl, line 111)
%%
%%{fetch_file_chunk_data,
%% <<"SELECT data FROM file_chunks WHERE (data_id = $1 AND chunk = $2)">>}.
{fetch_file_chunk_data,
 <<"SELECT data,chunk FROM file_chunks WHERE (data_id = $1 AND chunk = $2)">>}.

%% Insert a chunk
{add_file_chunk,
 <<"INSERT INTO file_chunks (data_id, chunk, data) VALUES ($1, $2, $3)">>}.

{replace_chunk_data, <<"SELECT replace_chunk_data($1)">>}.
