## JVM Configuration

<% # Wants: log_dir, enable_gc_log, heap_size, new_size, jvm_opts, tmp_dir %>

<% @jvm_opts.each do |opt| %>
<%=opt%>
<% end %>
# Do not override xmx/xms/newsize in
# jvm_options - instead set the attributes in chef-server.rb
-Xmx<%=@heap_size%>m
-Xms<%=@heap_size%>m
-XX:NewSize=<%= @new_size %>M

# These are defaulted based on what 6.8 ships with.
# https://github.com/elastic/elasticsearch/blob/6.8/distribution/src/config/jvm.options

## GC configuration

-XX:+UseConcMarkSweepGC
-XX:CMSInitiatingOccupancyFraction=75
-XX:+UseCMSInitiatingOccupancyOnly

## G1GC Configuration
# NOTE: G1GC is only supported on JDK version 10 or later.
# To use G1GC uncomment the lines below.
# This optimization might help improve the overall
# throughput of the cluster.
# 10-:-XX:-UseConcMarkSweepGC
# 10-:-XX:-UseCMSInitiatingOccupancyOnly
# 10-:-XX:+UseG1GC
# 10-:-XX:InitiatingHeapOccupancyPercent=75

## optimizations

# pre-touch memory pages used by the JVM during initialization
-XX:+AlwaysPreTouch

## basic

# explicitly set the stack size
-Xss1m

# set to headless, just in case
-Djava.awt.headless=true

# ensure UTF-8 encoding by default (e.g. filenames)
-Dfile.encoding=UTF-8

# use our provided JNA always versus the system one
-Djna.nosys=true

# turn off a JDK optimization that throws away stack traces for common
# exceptions because stack traces are important for debugging
-XX:-OmitStackTraceInFastThrow

# flags to configure Netty
-Dio.netty.noUnsafe=true
-Dio.netty.noKeySetOptimization=true
-Dio.netty.recycler.maxCapacityPerThread=0

# log4j 2
-Dlog4j.shutdownHookEnabled=false
-Dlog4j2.disable.jmx=true

-Djava.io.tmpdir=<%= @tmp_dir %>

## heap dumps

# generate a heap dump when an allocation from the Java heap fails
# heap dumps are created in the working directory of the JVM
-XX:+HeapDumpOnOutOfMemoryError

## GC logging
<% if @enable_gc_log %>

  # JDK 9+ GC logging
  9-:-Xlog:gc*,gc+age=trace,safepoint:file=${loggc}:utctime,pid,tags:filecount=32,filesize=64m
  # due to internationalization enhancements in JDK 9 Elasticsearch need to set the provider to COMPAT otherwise
  # time/date parsing will break in an incompatible way for some date patterns and locals
  9-:-Djava.locale.providers=COMPAT

<% end %>
