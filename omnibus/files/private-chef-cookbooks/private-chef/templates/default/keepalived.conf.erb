! Configuration File for keepalived

global_defs {
  notification_email {
    <%= node['private_chef']['notification_email'] %>
  }

  smtp_server <%= @smtp_server %>
  smtp_connect_timeout <%= @smtp_connect_timeout %>
}

vrrp_sync_group <%= @vrrp_sync_group %> {
  group {
    <%= @vrrp_sync_instance %>
  }
}

#Enter FAULT status if any condition is false
# TODO: We should check the log area and /var/opt/opscode. If close to full, FAULT
vrrp_script chk_df {
       script "[ `df -h | perl -lane 'print substr($F[-2], 0, -1) if m|/$|'` -lt 80 ]"
       interval 10
       fall 2   # Two intervals to die
       rise 2   # Two intervals to live
}

vrrp_instance <%= @vrrp_sync_instance %> {
    state <%= @vrrp_instance_state %>
    preempt_delay <%= @vrrp_instance_preempt_delay %>
<% if @vrrp_instance_nopreempt %>
    nopreempt
<% end %>
    interface <%= @vrrp_instance_interface %>
    virtual_router_id <%= @vrrp_instance_virtual_router_id %>
    priority <%= @vrrp_instance_priority %>
<% if @ipv6_on %>
    native_ipv6
<% end %>
<% if @vrrp_instance_vrrp_unicast_peer.nil? %>
    ! unicast_bind <local ip address>
    ! unicast_peer { <peer ip address> }
<% else %>
    unicast_srcip <%= @vrrp_instance_vrrp_unicast_bind %>
    unicast_peer { 
                <%= @vrrp_instance_vrrp_unicast_peer %>
    }
<% end %>
    advert_int <%= @vrrp_instance_advert_int %>
    track_script {
      chk_df
   }

		notify_backup "/var/opt/opscode/keepalived/bin/cluster.sh backup"
		notify_master "/var/opt/opscode/keepalived/bin/cluster.sh master"
		notify_fault  "/var/opt/opscode/keepalived/bin/cluster.sh fault"
		notify_stop "/var/opt/opscode/keepalived/bin/cluster.sh backup"
    authentication {
        auth_type PASS
        auth_pass <%= @vrrp_instance_password %>
    }
    virtual_ipaddress {
      <%= @vrrp_instance_ipaddress %> dev <%= @vrrp_instance_ipaddress_dev %>
    }
}

